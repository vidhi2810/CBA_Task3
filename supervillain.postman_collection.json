{
	"info": {
		"_postman_id": "b49e5c17-5c58-4613-85c0-ceddb9e05bb1",
		"name": "supervillain",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Application Authorisation",
			"item": [
				{
					"name": "AUTH/GENTOKEN-POST",
					"item": [
						{
							"name": "Application Authorisation - Create Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify EmailTo\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('emailTo').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"key\": \"vidhipatel123\",\r\n  \"email\": \"vidhi.shah.j@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/gentoken",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"gentoken"
									]
								},
								"description": "Create a token for your app"
							},
							"response": []
						},
						{
							"name": "Application Authorisation Verify Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Error\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('error').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"key\": \"vidhipatel\",\r\n  \"email\": \"vidhishah.j@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/gentoken",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"gentoken"
									]
								},
								"description": "Create a token for your app"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "AUTH/VerifyToken-GET",
					"item": [
						{
							"name": "Verify your token still valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Key\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData).to.have.property('key').to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Verify app\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData).to.have.property('app').to.be.a('string');\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/verifytoken",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"verifytoken"
									]
								},
								"description": "Verify your token still valid."
							},
							"response": []
						},
						{
							"name": "Verify invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Error\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData).to.have.property('error').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "ciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2aWRoaSIsImVtYWlsIjoidmlkaGlzaGFoLmpAZ21haWwuY29tIiwiaWF0IjoxNjQ1OTU4ODE5LCJleHAiOjE2NDYyMTgwMTl9.NsMvaPdyhYOWVMtE6NSmn1AnYSyOSJQf7f4wFaBKIq6KCbyO-tdm5Q_aMecuWVee1SB83nYqXyy4OHYDDmPHGg",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "x-api-key",
										"value": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2aWRoaSIsImVtYWlsIjoidmlkaGlzaGFoLmpAZ21haWwuY29tIiwiaWF0IjoxNjQ1OTU4ODE5LCJleHAiOjE2NDYyMTgwMTl9.NsMvaPdyhYOWVMtE6NSmn1AnYSyOSJQf7f4wFaBKIq6KCbyO-tdm5Q_aMecuWVee1SB83nYqXyy4OHYDDmPHGg",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/verifytoken",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"verifytoken"
									]
								},
								"description": "Verify your token still valid."
							},
							"response": []
						}
					],
					"auth": {
						"type": "apikey",
						"apikey": [
							{
								"key": "value",
								"value": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2aWRoaXBhdGVsMSIsImVtYWlsIjoidmlkaGkuc2hhaC5qQGdtYWlsLmNvbSIsImlhdCI6MTY0NjAyOTUwMywiZXhwIjoxNjQ2Mjg4NzAzfQ.qHYy4zQSBycRkIV4Nah9djkB6Ap-EiLSRI2JU32qUK2q2HVtoRc0GvZTsZ-q0tF3hlFAV2OLp9CiMCRDHezHrg",
								"type": "string"
							},
							{
								"key": "key",
								"value": "Authorization",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "User Authentication",
			"item": [
				{
					"name": "AUTH/USER/REGISTER-POST",
					"item": [
						{
							"name": "Registration and Authentication of Users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var userName=\"username\"+\"{{$randomInt}}\";\r",
											"pm.environment.set(\"username\", userName);\r",
											"console.log(pm.environment.get(\"username\"));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": {{userName}},\r\n  \"password\": \"testPW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/user/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Registration abc user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var userName=\"username\"+\"{{$randomInt}}\";\r",
											"pm.environment.set(\"userName\", JSON.stringify(userName));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"abc\",\r\n  \"password\": \"testPW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/user/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Registration duplicated user ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var userName=\"username\"+\"{{$randomInt}}\";\r",
											"pm.environment.set(\"userName\", JSON.stringify(userName));"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Error\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData).to.have.property('error').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"abc\",\r\n  \"password\": \"testPW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/user/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"user",
										"register"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "AUTH/USER/LOGIN-POST",
					"item": [
						{
							"name": "User Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Token\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData).to.have.property('token').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"abc\",\r\n  \"password\": \"testPW\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/user/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"user",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User Invalid Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Error\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('error').to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"abc\",\r\n  \"password\": \"invalidpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/auth/user/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"auth",
										"user",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{jwt}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "Authorization",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Leaderboard",
			"item": [
				{
					"name": "USER-POST",
					"item": [
						{
							"name": "Add a new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user1\",\r\n    \"score\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a new user 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user2\",\r\n    \"score\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a new user invalid Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"score\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "USER-GET",
					"item": [
						{
							"name": "GET user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Username\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    var userLength=jsonData.length\r",
											"    for(j=0;j<userLength;j++){\r",
											"        pm.expect(jsonData[j]).to.have.property('username').to.be.a('string');\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Verify score exist\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    var userLength=jsonData.length\r",
											"    for(j=0;j<userLength;j++){\r",
											"        pm.expect(jsonData[j]).to.have.property('score').to.be.a('number');\r",
											"    }\r",
											"});\r",
											"\r",
											"pm.test(\"Verify score in DESC order\", function() {\r",
											"    var jsonData = pm.response.json();\r",
											"    var userLength=jsonData.length\r",
											"    for(j=0;j<userLength-1;j++){\r",
											"        if(jsonData[j].score < jsonData[j+1].score){\r",
											"            pm.expect(true).to.be.eql(false);\r",
											"            break;\r",
											"        }else{\r",
											"            pm.expect(true).to.be.eql(true);\r",
											"        }\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "USER-PUT",
					"item": [
						{
							"name": "PUT user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user1\",\r\n    \"score\": 40\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "USER-DELETE",
					"item": [
						{
							"name": "DELETE User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2aWRoaXBhdGVsMSIsImVtYWlsIjoidmlkaGkuc2hhaC5qQGdtYWlsLmNvbSIsImlhdCI6MTY0NjAyOTUwMywiZXhwIjoxNjQ2Mjg4NzAzfQ.qHYy4zQSBycRkIV4Nah9djkB6Ap-EiLSRI2JU32qUK2q2HVtoRc0GvZTsZ-q0tF3hlFAV2OLp9CiMCRDHezHrg",
											"type": "string"
										},
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "delete-key",
										"value": "user1",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/v1/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"v1",
										"user"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "Add users and points into the leaderboard",
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{jwt}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "Authorization",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}